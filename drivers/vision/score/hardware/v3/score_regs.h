/*
 * Samsung Exynos SoC series SCore driver
 *
 * Definition of SCore SFR registers
 *
 * Copyright (c) 2018 Samsung Electronics Co., Ltd.
 *              http://www.samsung.com/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 */

#ifndef __SCORE_REGS_H__
#define __SCORE_REGS_H__

/* DSPM system control */
#define TS_WAKEUP			(0x0000)
#define DSPM_MCGEN			(0x0004)
#define DSPM_ALWAYS_ON			(0x0008)
#define SW_RESET			(0x000c)
#define CPUID_OF_CCH			(0x0010)
#define CORE_ID				(0x0014)
#define RELEASE_DATE			(0x0020)
#define AXIM0_SIGNAL			(0x0028)
#define AXIM2_SIGNAL			(0x002c)
#define APCPU_RAW_INTR_STATUS		(0x0030)
#define APCPU_INTR_ENABLE		(0x0034)
#define APCPU_MASKED_INTR_STATUS	(0x003c)
#define TS_INTR_ENABLE			(0x0040)
#define IVA_INTR_ENABLE			(0x0044)
#define ISP_INTR_STATUS			(0x0048)
#define SHUB_INTR_STATUS		(0x004c)
#define APCPU_SWI_STATUS		(0x0050)
#define APCPU_SWI_CLEAR			(0x0054)
#define TS_SWI_STATUS			(0x0058)
#define TS_SWI_CLEAR			(0x005c)
#define DMA_ACCESS_QCHCTRL		(0x0060)
#define SFR_ACCESS_QCHCTRL		(0x0064)
#define BARONCLK_REQ			(0x0068)
#define BARONCLK_ACK			(0x006c)
#define NPU_INTR_ENABLE			(0x0070)
#define NPU_SWI_STATUS			(0x0074)
#define NPU_SWI_CLEAR			(0x0078)
#define DSPM_QCH_INFO			(0x01e8)

/* DSPM Debug */
#define DSPM_DBG_RAW_INTR_STATUS	(0x0100)
#define DSPM_DBG_INTR_ENABLE		(0x0104)
#define DSPM_DBG_INTR_CLEAR		(0x0108)
#define DSPM_DBG_MASKED_INTR_STATUS	(0x010c)
#define DSPM_DBG_MONITOR_ENABLE		(0x0110)
/* 0~3, 5 cannot be used at EVT1 and value of six sfr are the same at EVT0 */
#define TS_PROGRAM_COUNTER3		(0x01dc)
#define TS_PROGRAM_COUNTER		TS_PROGRAM_COUNTER3
#define SCQ_SLVERR_INFO			(0x01ec)
#define TSCACHE_SLVERR_INFO0		(0x01f0)
#define TSCACHE_SLVERR_INFO1		(0x01f4)
#define TSCACHE_SLVERR_INFO2		(0x01f8)
#define TSCACHE_SLVERR_INFO3		(0x01fc)
#define TS_INFO				(0x0214)
#if defined(SCORE_EVT1)
#define TS_ACTIVE_COUNT_LOW		(0x0220)
#define TS_ACTIVE_COUNT_HIGH		(0x0224)
#endif

/* DSPM Performance */
#define DSPM_PERF_MONITOR_ENABLE	(0x0114)
#define DSPM_PERF_MONITOR_CLEAR		(0x0118)
#define TS_ICACHE_ACCESS_COUNT_LOW	(0x0120)
#define TS_ICACHE_ACCESS_COUNT_HIGH	(0x0124)
#define TS_ICACHE_MISS_COUNT		(0x0128)
#define TS_DCACHE_ACCESS_COUNT		(0x0130)
#define TS_DCACHE_MISS_COUNT		(0x0134)
#define AXIM0_RDBEAT_COUNT		(0x0140)
#define AXIM0_WRBEAT_COUNT		(0x0144)
#define AXIM0_RD_MAX_MO_COUNT		(0x0148)
#define AXIM0_WR_MAX_MO_COUNT		(0x014c)
#define AXIM0_RD_MAX_REQ_LAT		(0x0150)
#define AXIM0_WR_MAX_REQ_LAT		(0x0154)
#define AXIM0_RD_MAX_AR2R_LAT		(0x0158)
#define AXIM0_RD_MAX_R2R_LAT		(0x015c)
#define AXIM1_RDBEAT_COUNT		(0x0160)
#define AXIM1_WRBEAT_COUNT		(0x0164)
#define AXIM1_RD_MAX_MO_COUNT		(0x0168)
#define AXIM1_WR_MAX_MO_COUNT		(0x016c)
#define AXIM1_RD_MAX_REQ_LAT		(0x0170)
#define AXIM1_WR_MAX_REQ_LAT		(0x0174)
#define AXIM1_RD_MAX_AR2R_LAT		(0x0178)
#define AXIM1_RD_MAX_R2R_LAT		(0x017c)
#define AXIM2_RDBEAT_COUNT		(0x0180)
#define AXIM2_WRBEAT_COUNT		(0x0184)
#define AXIM2_RD_MAX_MO_COUNT		(0x0188)
#define AXIM2_WR_MAX_MO_COUNT		(0x018c)
#define AXIM2_RD_MAX_REQ_LAT		(0x0190)
#define AXIM2_WR_MAX_REQ_LAT		(0x0194)
#define AXIM2_RD_MAX_AR2R_LAT		(0x0198)
#define AXIM2_RD_MAX_R2R_LAT		(0x019c)
#define AXIS1_RDBEAT_COUNT		(0x01a0)
#define AXIS1_WRBEAT_COUNT		(0x01a4)
#define AXIS1_RD_MAX_MO_COUNT		(0x01a8)
#define AXIS1_WR_MAX_MO_COUNT		(0x01ac)
#define AXIS1_RD_MAX_REQ_LAT		(0x01b0)
#define AXIS1_WR_MAX_REQ_LAT		(0x01b4)
#define AXIS1_RD_MAX_AR2R_LAT		(0x01b8)
#define AXIS1_RD_MAX_R2R_LAT		(0x01bc)
#define TS_INST_COUNT_LOW		(0x01c0)
#define TS_INST_COUNT_HIGH		(0x01c4)
#define TS_INTR_COUNT_LOW		(0x01c8)
#define TS_INTR_COUNT_HIGH		(0x01cc)
#define TS_CORE_STALL_COUNT		(0x0200)
#define TS_PM_STALL_COUNT		(0x0204)
#define TS_DM_STALL_COUNT		(0x0208)
#define TS_SP_STALL_COUNT		(0x020c)
#define TS_SFR_STALL_COUNT		(0x0210)
#define DMA_EXEC_INDEX_INFO		(0x021c)
#define DMA0_EXEC_COUNT0		(0x0380)
#define DMA0_EXEC_COUNT1		(0x0384)
#define DMA0_EXEC_COUNT2		(0x0388)
#define DMA0_EXEC_COUNT3		(0x038c)
#define DMA0_EXEC_COUNT4		(0x0390)
#define DMA0_EXEC_COUNT5		(0x0394)
#define DMA0_EXEC_COUNT6		(0x0398)
#define DMA0_EXEC_COUNT7		(0x039c)
#define DMA0_EXEC_COUNT8		(0x03a0)
#define DMA0_EXEC_COUNT9		(0x03a4)
#define DMA0_EXEC_COUNT10		(0x03a8)
#define DMA0_EXEC_COUNT11		(0x03ac)
#define DMA0_EXEC_COUNT12		(0x03b0)
#define DMA0_EXEC_COUNT13		(0x03b4)
#define DMA0_EXEC_COUNT14		(0x03b8)
#define DMA0_EXEC_COUNT15		(0x03bc)
#define DMA1_EXEC_COUNT0		(0x0340)
#define DMA1_EXEC_COUNT1		(0x0344)
#define DMA1_EXEC_COUNT2		(0x0348)
#define DMA1_EXEC_COUNT3		(0x034c)
#define DMA1_EXEC_COUNT4		(0x0350)
#define DMA1_EXEC_COUNT5		(0x0354)
#define DMA1_EXEC_COUNT6		(0x0358)
#define DMA1_EXEC_COUNT7		(0x035c)
#define DMA1_EXEC_COUNT8		(0x0360)
#define DMA1_EXEC_COUNT9		(0x0364)
#define DMA1_EXEC_COUNT10		(0x0368)
#define DMA1_EXEC_COUNT11		(0x036c)
#define DMA1_EXEC_COUNT12		(0x0370)
#define DMA1_EXEC_COUNT13		(0x0374)
#define DMA1_EXEC_COUNT14		(0x0378)
#define DMA1_EXEC_COUNT15		(0x037c)
#define DMA2_EXEC_COUNT0		(0x0300)
#define DMA2_EXEC_COUNT1		(0x0304)
#define DMA2_EXEC_COUNT2		(0x0308)
#define DMA2_EXEC_COUNT3		(0x030c)
#define DMA2_EXEC_COUNT4		(0x0310)
#define DMA2_EXEC_COUNT5		(0x0314)
#define DMA2_EXEC_COUNT6		(0x0318)
#define DMA2_EXEC_COUNT7		(0x031c)
#define DMA2_EXEC_COUNT8		(0x0320)
#define DMA2_EXEC_COUNT9		(0x0324)
#define DMA2_EXEC_COUNT10		(0x0328)
#define DMA2_EXEC_COUNT11		(0x032c)
#define DMA2_EXEC_COUNT12		(0x0330)
#define DMA2_EXEC_COUNT13		(0x0334)
#define DMA2_EXEC_COUNT14		(0x0338)
#define DMA2_EXEC_COUNT15		(0x033c)
#define DMA3_EXEC_COUNT0		(0x03c0)
#define DMA3_EXEC_COUNT1		(0x03c4)
#define DMA3_EXEC_COUNT2		(0x03c8)
#define DMA3_EXEC_COUNT3		(0x03cc)
#define DMA3_EXEC_COUNT4		(0x03d0)
#define DMA3_EXEC_COUNT5		(0x03d4)
#define DMA3_EXEC_COUNT6		(0x03d8)
#define DMA3_EXEC_COUNT7		(0x03dc)
#define DMA3_EXEC_COUNT8		(0x03e0)
#define DMA3_EXEC_COUNT9		(0x03e4)
#define DMA3_EXEC_COUNT10		(0x03e8)
#define DMA3_EXEC_COUNT11		(0x03ec)
#define DMA3_EXEC_COUNT12		(0x03f0)
#define DMA3_EXEC_COUNT13		(0x03f4)
#define DMA3_EXEC_COUNT14		(0x03f8)
#define DMA3_EXEC_COUNT15		(0x03fc)

/* DSPS system control */
#define BR1_WAKEUP			(0x1000)
#define BR2_WAKEUP			(0x1004)
#define DSPS_MCGEN			(0x1008)
#define DSPS_ALWAYS_ON			(0x100c)
#define BR1_INTR_ENABLE			(0x1010)
#define BR2_INTR_ENABLE			(0x1014)
#define BR1_SWI_STATUS			(0x1020)
#define BR1_SWI_CLEAR			(0x1024)
#define BR2_SWI_STATUS			(0x1028)
#define BR2_SWI_CLEAR			(0x102c)
#define BR0_STA_MONITOR			(0x1080)
#define BR1_STA_MONITOR			(0x1084)
#define MPU_MONITOR0			(0x1090)
#define MPU_MONITOR1			(0x1094)
#define MPU_MONITOR2			(0x1098)
#define MPU_MONITOR3			(0x109c)
#define MPU_MONITOR4			(0x10a0)
#define MPU_MONITOR5			(0x10a4)
#define MPU_MONITOR6			(0x10a8)
#define MPU_MONITOR7			(0x10ac)
#define DSPS_QCH_INFO			(0x11c8)

/* DSPS Debug */
#define DSPS_DBG_RAW_INTR_STATUS	(0x1100)
#define DSPS_DBG_INTR_ENABLE		(0x1104)
#define DSPS_DBG_INTR_CLEAR		(0x1108)
#define DSPS_DBG_MASKED_INTR_STATUS	(0x110c)
#define DSPS_DBG_MONITOR_ENABLE		(0x1110)
#define BR1_PROGRAM_COUNTER		(0x11c0)
#define BR2_PROGRAM_COUNTER		(0x11c4)
#define BRCACHE_SLVERR_INFO0		(0x11cc)
#define BRCACHE_SLVERR_INFO1		(0x11d0)
#define BRCACHE_SLVERR_INFO2		(0x11d4)
#define BRCACHE_SLVERR_INFO3		(0x11d8)
#define BRCACHE_SLVERR_INFO4		(0x11dc)
#define BRCACHE_SLVERR_INFO5		(0x11e0)
#define BRCACHE_SLVERR_INFO6		(0x11e4)
#define TCMBOUNDARY_ERRINFO		(0x11e8)
#if defined(SCORE_EVT1)
#define BR1_ACTIVE_COUNT_LOW		(0x1280)
#define BR1_ACTIVE_COUNT_HIGH		(0x1284)
#define BR2_ACTIVE_COUNT_LOW		(0x1288)
#define BR2_ACTIVE_COUNT_HIGH		(0x128c)
#endif

/* DSPS Performance */
#define DSPS_PERF_MONITOR_ENABLE	(0x1114)
#define DSPS_PERF_MONITOR_CLEAR		(0x1118)
#define BR1_ICACHE_ACCESS_COUNT_LOW	(0x1120)
#define BR1_ICACHE_ACCESS_COUNT_HIGH	(0x1124)
#define BR1_ICACHE_MISS_COUNT		(0x1128)
#define BR2_ICACHE_ACCESS_COUNT_LOW	(0x112c)
#define BR2_ICACHE_ACCESS_COUNT_HIGH	(0x1130)
#define BR2_ICACHE_MISS_COUNT		(0x1134)
#define BRL2_ICACHE_ACCESS_COUNT	(0x1138)
#define BRL2_ICACHE_MISS_COUNT		(0x113c)
#define BR1_DCACHE_ACCESS_COUNT		(0x1140)
#define BR1_DCACHE_MISS_COUNT		(0x1144)
#define BR2_DCACHE_ACCESS_COUNT		(0x1148)
#define BR2_DCACHE_MISS_COUNT		(0x114c)
#define AXIM3_RDBEAT_COUNT		(0x1160)
#define AXIM3_WRBEAT_COUNT		(0x1164)
#define AXIM3_RD_MAX_MO_COUNT		(0x1168)
#define AXIM3_WR_MAX_MO_COUNT		(0x116c)
#define AXIM3_RD_MAX_REQ_LAT		(0x1170)
#define AXIM3_WR_MAX_REQ_LAT		(0x1174)
#define AXIM3_RD_MAX_AR2R_LAT		(0x1178)
#define AXIM3_RD_MAX_R2R_LAT		(0x117c)
#define AXIS2_RDBEAT_COUNT		(0x1180)
#define AXIS2_WRBEAT_COUNT		(0x1184)
#define AXIS2_RD_MAX_MO_COUNT		(0x1188)
#define AXIS2_WR_MAX_MO_COUNT		(0x118c)
#define AXIS2_RD_MAX_REQ_LAT		(0x1190)
#define AXIS2_WR_MAX_REQ_LAT		(0x1194)
#define AXIS2_RD_MAX_AR2R_LAT		(0x1198)
#define AXIS2_RD_MAX_R2R_LAT		(0x119c)
#define BR1_INST_COUNT_LOW		(0x11a0)
#define BR1_INST_COUNT_HIGH		(0x11a4)
#define BR2_INST_COUNT_LOW		(0x11a8)
#define BR2_INST_COUNT_HIGH		(0x11ac)
#define BR1_INTR_COUNT_LOW		(0x11b0)
#define BR1_INTR_COUNT_HIGH		(0x11b4)
#define BR2_INTR_COUNT_LOW		(0x11b8)
#define BR2_INTR_COUNT_HIGH		(0x11bc)
#define BR1_CORE_STALL_COUNT		(0x1200)
#define BR1_PM_STALL_COUNT		(0x1204)
#define BR1_DM_STALL_COUNT		(0x1208)
#define BR1_SP_STALL_COUNT		(0x120c)
#define BR1_SFR_STALL_COUNT		(0x1210)
#define BR1_TCM_STALL_COUNT		(0x1214)
#define BR1_TCM_ACCESS_COUNT		(0x1218)
#define BR2_CORE_STALL_COUNT		(0x1220)
#define BR2_PM_STALL_COUNT		(0x1224)
#define BR2_DM_STALL_COUNT		(0x1228)
#define BR2_SP_STALL_COUNT		(0x122c)
#define BR2_SFR_STALL_COUNT		(0x1230)
#define BR2_TCM_STALL_COUNT		(0x1234)
#define BR2_TCM_ACCESS_COUNT		(0x1238)
#define DMARD_TCM_ACCESS_COUNT		(0x1240)
#define DMAWR_TCM_ACCESS_COUNT		(0x1244)
#define IVA_TCM_ACCESS_COUNT		(0x1248)
#define DMARD_TCM_STALL_COUNT		(0x124c)
#define DMAWR_TCM_STALL_COUNT		(0x1250)
#define IVA_TCM_STALL_COUNT		(0x1254)
#if defined(SCORE_EVT1)
#define AXIM0_BRCACHE_RDBEAT_COUNT	(0x1260)
#define AXIM0_BRCACHE_WRBEAT_COUNT	(0x1264)
#define AXIM0_BRCACHE_RD_MAX_MO_COUNT	(0x1268)
#define AXIM0_BRCACHE_WR_MAX_MO_COUNT	(0x126c)
#define AXIM0_BRCACHE_RD_MAX_REQ_LAT	(0x1270)
#define AXIM0_BRCACHE_WR_MAX_REQ_LAT	(0x1274)
#define AXIM0_BRCACHE_RD_MAX_AR2R_LAT	(0x1278)
#define AXIM0_BRCACHE_RD_MAX_R2R_LAT	(0x127c)
#endif

/* scq */
#define SCQ_SET_INFO			(0x2000)
#define SCQ_CMD_SET			(0x2004)
#define SCQ_GET_INFO			(0x2008)
#define SCQ_CMD_GET			(0x200c)
#define SCQ_SRAM_CMD_DATA		(0x2010)
#if defined(SCORE_EVT0)
#define SCQ_INTR_STATUS			(0x2020)
#define SCQ_INTR_ENABLE			(0x2024)
#define SCQ_INTR_CLEAR			(0x2028)
#define SCQ_INTR_MASK			(0x202c)
#define SCQ_QUEUE_CMD_NUMBER		(0x2034)
#define SCQ_QUEUE_CMD_DEL		(0x2038)
#define SCQ_QUEUE_CMD_VALID		(0x2040)
#define SCQ_QUEUE_CMD_NUMBER1		(0x204c)
#define SCQ_QUEUE_CMD_NUMBER2		(0x2050)
#define SCQ_READ_SRAM_LEFT_COUNT	(0x2044)
#define SCQ_WRITE_SRAM_LEFT_COUNT	(0x2048)
#else
#define SCQ_INTR_STATUS			(0x2014)
#define SCQ_INTR_ENABLE			(0x2018)
#define SCQ_INTR_CLEAR			(0x201c)
#define SCQ_INTR_MASK			(0x2020)
#define SCQ_QUEUE_CMD_NUMBER		(0x2024)
#define SCQ_QUEUE_CMD_VALID		(0x2028)
#define SCQ_QUEUE_CMD_NUMBER1		(0x202c)
#define SCQ_QUEUE_CMD_NUMBER2		(0x2030)
#define SCQ_READ_SRAM_LEFT_COUNT	(0x2034)
#define SCQ_WRITE_SRAM_LEFT_COUNT	(0x2038)
#endif

#define TS_CACHE_STATUS			(0x40004)
#define TS_CACHE_RAW_INTR		(0x40010)
#define TS_CACHE_INTR_ENABLE		(0x40014)
#define TS_CACHE_INTR_CLEAR		(0x40018)
#define TS_CACHE_MASKED_INTR		(0x4001c)
#define TS_CACHE_IC_BASE_ADDR		(0x40040)
#define TS_CACHE_IC_CODE_SIZE		(0x40044)
#define TS_CACHE_IC_CTRL_REQ		(0x40050)
#define TS_CACHE_IC_CTRL_STATUS		(0x40054)
#define TS_CACHE_DC_BASE_ADDR		(0x40080)
#define TS_CACHE_DC_DATA_SIZE		(0x40084)
#define TS_CACHE_DC_STACK_START_ADDR	(0x40088)
#define TS_CACHE_DC_STACK_END_ADDR	(0x4008c)
#define TS_CACHE_DC_CTRL_REQ		(0x40090)
#define TS_CACHE_DC_CTRL_STATUS		(0x40094)

#define BR_CACHE_MODE			(0x60000)
#define BR_CACHE_STATUS			(0x60004)
#define BR_CACHE_RAW_INTR		(0x60010)
#define BR_CACHE_INTR_ENABLE		(0x60014)
#define BR_CACHE_INTR_CLEAR		(0x60018)
#define BR_CACHE_MASKED_INTR		(0x6001c)
#define BR_CACHE_IC_BASE_ADDR		(0x60040)
#define BR_CACHE_IC_CODE_SIZE		(0x60044)
#define BR_CACHE_IC_CTRL_REQ		(0x60050)
#define BR_CACHE_IC_CTRL_STATUS		(0x60054)
#define BR1_CACHE_DC_BASE_ADDR		(0x60080)
#define BR1_CACHE_DC_DATA_SIZE		(0x60084)
#define BR1_CACHE_DC_STACK_START_ADDR	(0x60088)
#define BR1_CACHE_DC_STACK_END_ADDR	(0x6008c)
#define BR1_CACHE_DC_CTRL_REQ		(0x60090)
#define BR1_CACHE_DC_CTRL_STATUS	(0x60094)
#define BR2_CACHE_DC_BASE_ADDR		(0x600a0)
#define BR2_CACHE_DC_DATA_SIZE		(0x600a4)
#define BR2_CACHE_DC_STACK_START_ADDR	(0x600a8)
#define BR2_CACHE_DC_STACK_END_ADDR	(0x600ac)
#define BR2_CACHE_DC_CTRL_REQ		(0x600b0)
#define BR2_CACHE_DC_CTRL_STATUS	(0x600b4)

/* DMA Debug */
#define DMA0_QUEUE_STATUS		(0x4200)
#define DMA1_QUEUE_STATUS		(0x4204)
#define DMA2_QUEUE_STATUS		(0x4208)
#define DMA3_QUEUE_STATUS		(0x420c)
#define DMA0_PUSH_COUNT			(0x4210)
#define DMA1_PUSH_COUNT			(0x4214)
#define DMA2_PUSH_COUNT			(0x4218)
#define DMA3_PUSH_COUNT			(0x421c)
#define DMA0_POP_COUNT			(0x4220)
#define DMA1_POP_COUNT			(0x4224)
#define DMA2_POP_COUNT			(0x4228)
#define DMA3_POP_COUNT			(0x422c)

/**
 * 0x23c00 ~ 0x23fff : Reserved SFR of shared memory
 * This is used from the top (RESERVED 0 - 255)
 * RESERVED 0 - 31 : USERDEFINED(N)
 * RESERVED 32 : front of queue for ScPrintf
 * RESERVED 33 : rear of queue for ScPrintf
 * RESERVED 34 : counter for ScPrintf
 * RESERVED 35 : flag of TS_INIT_DONE_CHECK
 * RESERVED 36 : flag of BR1_INIT_DONE_CHECK
 * RESERVED 37 : flag of BR2_INIT_DONE_CHECK
 * RESERVED 38 : base address of malloc at ts
 * RESERVED 39 : size of malloc at ts
 * RESERVED 40 : base address of malloc at baron1
 * RESERVED 41 : base address of malloc at baron2
 * RESERVED 42 : size of malloc at baron
 * RESERVED 43 : base address of print
 * RESERVED 44 : size of print
 * RESERVED 45 : size of profiler for ts
 * RESERVED 46 : base address of profiler for ts
 * RESERVED 47 : profiler ring buffer head for ts
 * RESERVED 48 : profiler ring buffer tail for ts
 * RESERVED 49 : size of profiler for baron1 and baron2
 * RESERVED 50 : base address of profiler for baron1
 * RESERVED 51 : profiler ring buffer head for baron1
 * RESERVED 52 : profiler ring buffer tail for baron1
 * RESERVED 53 : base address of profiler for baron2
 * RESERVED 54 : profiler ring buffer head for baron2
 * RESERVED 55 : profiler ring buffer tail for baron2
 * RESERVED 56 : profiler tag select filter
 */
#define SM_BASE_ADDR		(0x20000)
#define SM_SIZE			(SZ_1K * 16)
#define SM_RESERVED_SIZE	(SZ_1K)
#define SM_RESERVED_START	(SM_BASE_ADDR + SM_SIZE - 0x4)
#define SM_RESERVED_END		(SM_BASE_ADDR + SM_SIZE - SM_RESERVED_SIZE)
#define SM_RESERVED(n)		(SM_RESERVED_START - 0x4 * (n))
#define SM_DEBUG_RESERVED(n)	(SM_RESERVED_END + 0x4 * (n))

#define PRINT_QUEUE_FRONT_ADDR	(SM_RESERVED(0))
#define PRINT_QUEUE_REAR_ADDR	(SM_RESERVED(1))
#define PRINT_COUNT		(SM_RESERVED(2))
#define TS_INIT_DONE_CHECK	(SM_RESERVED(3))
#define BR1_INIT_DONE_CHECK	(SM_RESERVED(4))
#define BR2_INIT_DONE_CHECK	(SM_RESERVED(5))
#define TS_MALLOC_BASE_ADDR	(SM_RESERVED(6))
#define TS_MALLOC_SIZE		(SM_RESERVED(7))
#define BR1_MALLOC_BASE_ADDR	(SM_RESERVED(8))
#define BR2_MALLOC_BASE_ADDR	(SM_RESERVED(9))
#define BR_MALLOC_SIZE		(SM_RESERVED(10))
#define PRINT_BASE_ADDR		(SM_RESERVED(11))
#define PRINT_SIZE		(SM_RESERVED(12))
#define PROFILER_TS_SIZE	(SM_RESERVED(13))
#define PROFILER_TS_BASE_ADDR	(SM_RESERVED(14))
#define PROFILER_TS_HEAD	(SM_RESERVED(15))
#define PROFILER_TS_TAIL	(SM_RESERVED(16))
#define PROFILER_BR_SIZE	(SM_RESERVED(17))
#define PROFILER_BR1_BASE_ADDR	(SM_RESERVED(18))
#define PROFILER_BR1_HEAD	(SM_RESERVED(19))
#define PROFILER_BR1_TAIL	(SM_RESERVED(20))
#define PROFILER_BR2_BASE_ADDR	(SM_RESERVED(21))
#define PROFILER_BR2_HEAD	(SM_RESERVED(22))
#define PROFILER_BR2_TAIL	(SM_RESERVED(23))
#define PROFILER_TAG_MASK	(SM_RESERVED(24))
#define BR1_PROLOGUE_DONE	(SM_RESERVED(25))
#define BR2_PROLOGUE_DONE	(SM_RESERVED(26))
#define TOTAL_TILE_COUNT	(SM_RESERVED(27))
#define TOTAL_TCM_SIZE		(SM_RESERVED(28))
#define ENABLE_TCM_HALF		(SM_RESERVED(29))
#define TS_VSIZE_TYPE		(SM_RESERVED(30))
#define SCHEDULE_NORMAL_COUNT	(SM_RESERVED(31))
#define SCHEDULE_HIGH_COUNT	(SM_RESERVED(32))
#define SCHEDULE_BITMAP		(SM_RESERVED(33))
#define SCHEDULE_NORMAL_WPOS	(SM_RESERVED(34))
#define SCHEDULE_NORMAL_RPOS	(SM_RESERVED(35))
#define SCHEDULE_HIGH_WPOS	(SM_RESERVED(36))
#define SCHEDULE_HIGH_RPOS	(SM_RESERVED(37))

/* target debug */
#define USERDEFINED_COUNT	(64)
#define USERDEFINED(n)		(SM_DEBUG_RESERVED(n))
#define TS_ABORT_STATE0		(SM_DEBUG_RESERVED(USERDEFINED_COUNT + 0))
#define TS_ABORT_STATE1		(SM_DEBUG_RESERVED(USERDEFINED_COUNT + 1))
#define TS_ABORT_STATE2		(SM_DEBUG_RESERVED(USERDEFINED_COUNT + 2))
#define TS_ABORT_STATE3		(SM_DEBUG_RESERVED(USERDEFINED_COUNT + 3))
#define TS_ABORT_STATE4		(SM_DEBUG_RESERVED(USERDEFINED_COUNT + 4))
#define SCHEDULE_STATE		(SM_DEBUG_RESERVED(USERDEFINED_COUNT + 5))
#define CORE_STATE		(SM_DEBUG_RESERVED(USERDEFINED_COUNT + 6))
#define PRIORITY_STATE		(SM_DEBUG_RESERVED(USERDEFINED_COUNT + 7))
#define TS_KERNEL_ID		(SM_DEBUG_RESERVED(USERDEFINED_COUNT + 8))
#define TS_ENTRY_FLAG		(SM_DEBUG_RESERVED(USERDEFINED_COUNT + 9))
#define INDIRECT_FUNC		(SM_DEBUG_RESERVED(USERDEFINED_COUNT + 10))
#define INDIRECT_ADDR		(SM_DEBUG_RESERVED(USERDEFINED_COUNT + 11))
#define TS_REQUEST_TYPE		(SM_DEBUG_RESERVED(USERDEFINED_COUNT + 12))
#define TS_TCM_MALLOC_STATE	(SM_DEBUG_RESERVED(USERDEFINED_COUNT + 13))
#define BR1_CURRENT_KERNEL	(SM_DEBUG_RESERVED(USERDEFINED_COUNT + 14))
#define BR2_CURRENT_KERNEL	(SM_DEBUG_RESERVED(USERDEFINED_COUNT + 15))

#endif
